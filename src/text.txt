 FlightSearch handle submit
 console.log(
      "Flight search data:",
      "Departure location: ",
      from,
      "Arrival Location: ",
      to,
      "Departure date: ",
      formatDate(departureDate),
      "Return date: ",
      formatDate(returnDate),
      "Trip type: ",
      tripType,
      "Class: ",
      travelClass,
      "Adults: ",
      passengers["adults"],
      "Children: ",
      passengers["children"],
      "Infants: ",
      passengers["infants"],
      "Currency: ",
      currency,
      "Stopovers: ",
      stopoversCustomValue,
      "Departure time min: ",
      times.departure.min,
      "Departure time max: ",
      times.departure.max,
      "Arrival time min: ",
      times.arrival.min,
      "Arrival time max: ",
      times.arrival.max,
      "Return departure min: ",
      times.returnDeparture.min,
      "Return departure max: ",
      times.returnDeparture.max,
      "Return arrival min: ",
      times.returnArrival.min,
      "Return arrival max: ",
      times.returnArrival.max,
      "Going airpot code: ",
      goingAirportCode,
      "Return airport code: ",
      returnAirportCode
    );


Navbar
     // Effect hook for console logging state changes
  useEffect(() => {
    console.log("Departure time: ", times.departure);
    console.log("Arrrival time: ", times.arrival);
    console.log("Return Departure time: ", times.returnDeparture);
    console.log("Return Arrival time: ", times.returnArrival);
    console.log("Currency: ", currency);
    console.log("Clasa: ", travelClass);
    console.log(
      "Valoarea din passengers ",
      passengers.adults,
      passengers.children,
      passengers.infants
    );
    console.log("Valoarea din Stopovers ", stopovers, stopoversCustomValue);
  }, [
    times,
    currency,
    travelClass,
    passengers,
    stopovers,
    stopoversCustomValue,
  ]);
